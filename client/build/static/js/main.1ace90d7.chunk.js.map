{"version":3,"sources":["utils/utils.js","components/styles.js","components/Form/index.js","components/Navbar/index.js","components/Login/index.js","components/UserInfo/index.js","components/FacilityCard/index.js","components/VaccinationCard/index.js","components/Vaccinate/index.js","App.js","reportWebVitals.js","index.js"],"names":["fetcher","url","callback","options","a","fetch","then","response","json","catch","error","console","log","sender","data","method","headers","body","JSON","stringify","status","jwtToCookie","jwt","cookies","Cookies","timestamp","parse","atob","token","split","exp","expireDate","Date","set","path","expires","sameSite","getToken","get","expireTime","undefined","isLoggedIn","timeToExpire","now","OfflineDatabase","name","version","collection","key","this","__prepareDB","request","indexedDB","open","onupgradeneeded","event","result","createObjectStore","keyPath","alert","onsuccess","onerror","e","target","Promise","resolve","id","DB","db","transaction","objectStore","all","getAll","delete","clear","deleteObjectStore","put","styles","glassMorphism","background","boxShadow","backdropFilter","WebkitBackdropFilter","borderRadius","myMakeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","width","submit","schema","yup","fname","required","lname","bdate","pesel","email","phone","city","street","home_number","zip","password","min","MyTextField","props","useField","meta","errorText","touched","TextField","helperText","FormDziabadaj","loginSetter","useState","classes","makeStyles","Container","component","maxWidth","CssBaseline","Grid","Paper","style","className","Typography","variant","validationSchema","initialValues","patient_info","onSubmit","setSubmitting","resetForm","hash","API","setTimeout","values","isSubmitting","errors","placeholder","type","label","as","Button","disabled","useStyles","root","flexGrow","menuButton","marginRight","title","color","MyAppBar","history","useHistory","React","auth","setAuth","anchorEl","setAnchorEl","Boolean","expire","timeleft","setTimeLeft","useEffect","formatDistanceToNowStrict","unit","handleClose","AppBar","position","Toolbar","onClick","push","Link","to","IconButton","aria-label","aria-controls","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Login","btnstyle","elevation","padding","height","align","Avatar","backgroundColor","message","isLogged","paperStyle","palette","UserInfo","setData","List","ListItem","ListItemText","primary","secondary","homeNumber","minWidth","bullet","transform","fontSize","pos","marginBottom","SimpleCard","Card","CardContent","gutterBottom","clinic_name","daily_limit","building_number","contact_info","facility_info","country","CardActions","size","idSetter","VaccinationCard","date","FormVaccinate","Id","setId","vacc","setVacc","facilities","setFacilities","facility_id","location","reload","find","map","item","App","IsLogged","setLogged","addEventListener","updateOnlineStatus","navigator","onLine","URL","idb","forEach","element","deleteAll","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ace90d7.chunk.js","sourcesContent":["import React from \"react\"\nimport Cookies from \"universal-cookie\"\n\nexport function isEmpty(arr) { return arr.length === 0 }\n\nexport function fetcher(url, callback, options = {}) \n{\n    (async () => \n    {\n        await fetch(url, options)\n            .then( async response => callback(await response.json()) )\n            .catch(error => console.log(error))\n    })()\n}\n\nexport async function sender(url, data)\n{\n    const response = await fetch(\n        url, \n        {\n            method: \"POST\",\n            headers:\n            {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n    })\n\n    const json = await response.json()\n\n    console.log(\"sending\")\n    return [json, response.status]\n}\n\nexport function jwtToCookie(jwt)\n{\n    const cookies = new Cookies();\n    const timestamp = JSON.parse(atob(jwt.token.split(\".\")[1])).exp\n    const expireDate = new Date(timestamp * 1e3)\n    console.log(jwt)\n    console.log(expireDate)\n    cookies.set(\"token\", jwt.token, { path: \"/\", expires: expireDate, sameSite:\"Lax\" }) \n}\n\nexport function getToken()\n{\n    const cookies = new Cookies();\n    return cookies.get(\"token\")\n}\n\nexport function expireTime()\n{\n    const cookies = new Cookies();\n    let expireDate = 0\n    const token = cookies.get(\"token\")\n    if (token === undefined)\n        return 0\n    const timestamp = JSON.parse(atob(token.split(\".\")[1])).exp\n    expireDate = new Date(timestamp * 1e3)\n\n    return expireDate\n}\n\nexport function isLoggedIn()\n{\n    return expireTime() > 0\n}\n\n\nexport function ifLoggedIn(then, otherWise=undefined)\n{\n    return isLoggedIn() ? then : otherWise\n}\n\n\nexport function timeToExpire()\n{\n    return expireTime() - Date.now()\n}\n\n\nexport class OfflineDatabase\n{\n    constructor(name, version, collection, key )\n    {\n        this.name = name\n        this.version = version\n        this.collection = collection\n        this.key = key\n        this.__prepareDB()\n    }\n\n    __prepareDB(callback)\n    {\n        const request = indexedDB.open(this.name, this.version)\n        \n        request.onupgradeneeded = (event) =>\n        {\n            let db = request.result\n            db.createObjectStore(this.collection, {keyPath: this.key})\n            alert(`Upgrade called, ${this.name}, ${this.version}`)\n        }\n\n        request.onsuccess = (event) =>\n        {\n            console.log(`Successuly opened database, ${this.name}, ${this.version}`)\n        }\n\n        request.onerror = e =>\n        {\n            alert(`Error called, ${e.target.error}`)\n        }\n    \n    }\n\n    async DB()\n    {\n        return new Promise(resolve =>\n            {\n                let request = indexedDB.open(this.name, this.version)\n                request.onsuccess = () => resolve(request.result)\n            })\n\n    }\n\n    async get(collection, id)\n    {\n        let db = await this.DB()\n\n        let all = await new Promise(resolve =>\n        {\n            const request = db.transaction(collection, \"readonly\")\n                            .objectStore(collection)\n                            .get(id)\n            \n            request.onsuccess = () => resolve(request.result)\n        })\n        \n        return all\n    }\n\n    async getAll(collection)\n    {\n        let db = await this.DB()\n\n        let all = await new Promise(resolve =>\n        {\n            const request = db.transaction(collection, \"readonly\")\n                            .objectStore(collection)\n                            .getAll()\n            \n            request.onsuccess = () => resolve(request.result)\n        })\n        \n        return all\n    }\n\n    async delete(collection, id)\n    {\n        let db = await this.DB()\n\n        let all = await new Promise(resolve =>\n        {\n            const request = db.transaction(collection, \"readwrite\")\n                            .objectStore(collection)\n                            .delete(id)\n            \n            request.onsuccess = () => resolve(request.result)\n        })\n        \n        return all\n    }\n\n    async deleteAll(collection)\n    {\n        let db = await this.DB()\n\n        let all = await new Promise(resolve =>\n        {\n            const request = db.transaction(collection, \"readwrite\")\n                            .objectStore(collection)\n                            .clear()\n            \n            request.onsuccess = () => resolve(request.result)\n        })\n        \n        return all\n    }\n\n    async createCollection(collection, key)\n    {\n        return new Promise(resolve =>\n        {\n            this.version += 1\n            let request = indexedDB.open(this.name, this.version)\n            request.onupgradeneeded = () => {\n                let db = request.result\n                db.createObjectStore(collection, {keyPath: key})\n                resolve(request.result)\n            }\n        });\n    }\n\n    async deleteCollection(collection)\n    {\n        return new Promise(resolve =>\n        {\n            this.version += 1\n            let request = indexedDB.open(this.name, this.version)\n            request.onupgradeneeded = () =>\n            {\n                let db = request.result\n                db.deleteObjectStore(collection)\n                resolve(request.result)\n            }\n        });\n    }\n\n    async insert(collection, data)\n    {\n        let db = await this.DB()\n\n        let all = await new Promise(resolve =>\n        {\n            const request = db.transaction(collection, \"readwrite\")\n                            .objectStore(collection)\n                            .put(data)\n            \n            request.onsuccess = () => resolve(request.result)\n        })\n        \n        return all\n    }\n}\n\n\nexport function handleOffline(url, data, { db = \"offDB\", collection = \"formData\", key = \"email\" } = {})\n{\n    const isOnline = navigator.onLine\n    if (isOnline)\n    {\n        return sender(url, data)\n    }\n    else\n    {\n        const idb = new OfflineDatabase(db, 1, collection, key)\n        idb.insert(\"formData\", data).then(e=>alert(\"Dane zapisano w przeglądarce. Zostaną wysłane po pojawieniu sę połączenia.\", e))\n    }\n\n    return\n}\n","\nexport const styles = {\n    \n    glassMorphism: {\n        background: \"rgba(255, 255, 255, 0.25)\",\n        boxShadow: \"0 8px 32px 0 rgba(31, 38, 135, 0.37)\",\n        backdropFilter: \"blur(4px)\",\n        WebkitBackdropFilter: \"blur(4px)\",\n        borderRadius: \"10px\"\n    },\n    myMakeStyles: (theme) => {\n        return {\n            paper: {\n                marginTop: theme.spacing(8),\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n            },\n            avatar: {\n                margin: theme.spacing(1),\n            },\n            form: {\n                width: \"100%\", // Fix IE 11 issue.\n                marginTop: theme.spacing(1),\n            },\n            submit: {\n                margin: theme.spacing(3, 0, 2),\n            },\n        }\n    }\n}","import React, { useEffect, useState } from \"react\"\nimport { sender, fetcher, handleOffline } from \"../../utils/utils\"\nimport {\n    Container,\n    CssBaseline,\n    Button, \n    TextField, \n    Grid, \n    Paper, \n    Typography, \n    makeStyles\n} from \"@material-ui/core\";\nimport { Formik, Field, Form, useField } from \"formik\"\nimport { styles } from \"../styles\"\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport hash from \"object-hash\"\nimport * as yup from \"yup\"\nimport { API } from \"../../App\"\n\nconst URL = \"resources/patients/create\"\n\nconst schema = yup.object({\n    fname: yup.string().required(\"Imię jest wymagane\"),\n    lname: yup.string().required(\"Nazwisko jest wymagane\"),\n    bdate: yup.date(\"Niepoprawny format daty\").required(\"Data urodzenia jest wymagana\"),\n    pesel: yup.string().required(\"Pesel jest wymagany\"),\n    email: yup.string().email(\"Nieprawidłowy email\").required(\"Email jest wymagany\"),\n    phone: yup.string().required(\"Numer telefonu jest wymagany\"),\n    city: yup.string().required(\"Miasto/miejscowość jest wymagane\"),\n    street: yup.string().required(\"Ulica jest wymagana\"),\n    home_number: yup.string().required(\"Numer domu jest wymagany\"),\n    zip: yup.string().required(\"Kod pocztowy jest wymagany\"),\n    password: yup.string()\n        .required(\"Nie wpisano hasła.\") \n        .min(8, \"Hasło jest zbyt krótkie - powinno mieć conajmniej 8 znaków.\")\n})\n\n\nexport const MyTextField = ({ ...props }) => {\n    const [field, meta] = useField(props);\n    const errorText = meta.error && meta.touched ? meta.error : \"\";\n\n    return (\n        <TextField\n            {...props}\n            margin=\"normal\"\n            helperText={errorText}\n            error={!!errorText}\n        />\n    )\n}\n\nexport default function FormDziabadaj({loginSetter})\n{\n    const [data, setData] = useState([])\n    const classes = makeStyles(styles.myMakeStyles);\n\n    return (\n        <div>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline> \n            <Grid>\n                <Paper style={styles.glassMorphism}>\n\n            <div >\n                <LocalHospitalIcon className={classes.avatar}>\n                    \n                </LocalHospitalIcon>\n            </div>\n            <Typography component=\"h1\" variant=\"h5\">\n                Zarejestruj się na szczepienie\n            </Typography>\n            <Formik\n                validationSchema={schema}\n                initialValues={\n                    {\n                        fname: \"\",\n                        lname: \"\",\n                        bdate: \"\",\n                        pesel: \"\",\n                        email: \"\",\n                        phone: \"\",\n                        city: \"\",\n                        street: \"\",\n                        home_number: \"\",\n                        zip: \"\",\n                        password: \"\",\n                        patient_info: null\n                    }}\n                onSubmit={async (data, { setSubmitting, resetForm }) =>\n                {\n                    setSubmitting(true);\n                    data.password = hash(data.password)\n                    console.log(data);\n                    setSubmitting(false);\n                    const [json, response] = await sender(API + URL, data)\n\n                    if (response === 200)\n                        alert(\"Sukces\")\n                    else\n                        alert(\"Niepowodzenie\")\n\n                    loginSetter(true)\n                    setTimeout(() =>\n                    {\n                        console.log(\"setting\")\n                        loginSetter(false)\n                    }, 10000)\n                    resetForm();\n                }}\n            >\n            {({\n                values,\n                isSubmitting,\n                errors,\n                touched\n            }) => \n            (\n                <Form>\n                    \n                    <Field \n                        name=\"fname\" \n                        placeholder=\"Jan\" \n                        type=\"input\" \n                        label=\"imię\" \n                        as={MyTextField}\n                    />\n                    <Field \n                        name=\"lname\" \n                        placeholder=\"Kowalski\"\n                        type=\"input\"\n                        label=\"nazwisko\"\n                        as={MyTextField}\n                    />\n                    <Field \n                        name=\"bdate\" \n                        placeholder=\"2003-05-13\" \n                        type=\"input\" \n                        label=\"data urodzenia\" \n                        as={MyTextField}\n                    />\n                    <Field \n                        name=\"pesel\" \n                        placeholder=\"12345679\" \n                        type=\"input\" \n                        label=\"pesel\" \n                        as={MyTextField}\n                    />\n                    <Field \n                        name=\"email\" \n                        placeholder=\"janKowalski@poczta.com\" \n                        type=\"input\" \n                        label=\"email\" \n                        as={MyTextField}\n                    />\n                    <Field \n                        name=\"phone\" \n                        placeholder=\"+48 123456789\" \n                        type=\"input\" \n                        label=\"telefon\" \n                        as={MyTextField}\n                    />\n                    <Field \n                        name=\"city\" \n                        placeholder=\"Kraków\" \n                        type=\"input\" \n                        label=\"miasto/miejscowość\" \n                        as={MyTextField}\n                    />\n                    <Field \n                        name=\"street\" \n                        placeholder=\"Kwiatowa\" \n                        type=\"input\" \n                        label=\"ulica\" \n                        as={MyTextField}\n                    />\n                    <Field \n                        name=\"home_number\" \n                        placeholder=\"354\" \n                        type=\"input\" \n                        label=\"number domu\" \n                        as={MyTextField}\n                     />\n                    <Field \n                        name=\"zip\" \n                        placeholder=\"58-023\" \n                        type=\"input\" \n                        label=\"kod pocztowy\" \n                        as={MyTextField}\n                    />\n                    <Field \n                        name=\"password\" \n                        placeholder=\"***********\" \n                        type=\"password\"  \n                        label=\"hasło\" \n                        as={MyTextField}\n                    />\n                     \n                    <Button disabled={isSubmitting} type=\"submit\">Prześlij zgłoszenie</Button>\n                </Form>\n            )}\n            </Formik>\n            </Paper>\n            </Grid>\n               </CssBaseline>                \n            </Container>\n        </div>\n    )\n}","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport { styles } from \"../styles\"\nimport { Link } from \"react-router-dom\"\nimport formatDistanceToNowStrict from \"date-fns/formatDistanceToNowStrict\"\nimport { expireTime, isLoggedIn } from \"../../utils/utils\";\nimport { useHistory } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: \"black\"\n  },\n}));\n\nexport default function MyAppBar() {\n  let history = useHistory()\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(isLoggedIn());\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  let expire = expireTime() \n  const [timeleft, setTimeLeft] = React.useState(expire)\n  useEffect(() =>\n  {\n    if (expire === 0)\n      return\n    setAuth(true)\n    try\n    {\n\n      const timer = setTimeout(() =>\n      {\n        setTimeLeft(formatDistanceToNowStrict(expireTime(), {unit: \"second\"}))  \n        if (expireTime() === 0)\n        {\n          setTimeLeft(0)\n          setAuth(false)\n        }\n      }, 1000)\n    }\n    catch (e)\n    {\n      let be = \"empty block\"\n\n    }\n    console.log(timeleft)\n  })\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={styles.glassMorphism}>\n        <Toolbar>\n          <Button onClick={()=> (history.push(\"/\"))}>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            Dziabadaj\n          </Typography>\n          </Button>\n          {!auth && (\n            <Button component={Link} to=\"/login\">Login</Button>\n          )}\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                // color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={open}\n                onClose={handleClose}\n                \n              >\n                <MenuItem onClick={() => { handleClose(); history.push(\"/details\") }}>Szczegóły konta</MenuItem>\n                <MenuItem onClick={() => { handleClose(); history.push(\"/vaccinations\") }}>Zaplanowane szczepenia</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n        </AppBar>\n          { timeleft ? `Do wylogowania pozostało: ${timeleft}` : \"\"}\n    </div>\n  );\n}\n","import React from \"react\"\nimport { Grid,Paper, Avatar, Box, Button } from \"@material-ui/core\"\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport hash from \"object-hash\"\nimport * as yup from \"yup\"\nimport { Formik, Field, Form, useField } from \"formik\"\nimport { MyTextField } from \"../Form\"\nimport { styles } from \"../styles\";\nimport { isLoggedIn, jwtToCookie, sender, timeToExpire} from \"../../utils/utils\"\nimport { useHistory } from \"react-router-dom\"\nimport { API } from \"../../App\"\n\nconst schema = yup.object(\n{\n    email: yup.string().email(\"Niepoprawny email\").required(\"Email jest wymagany\"),\n    password: yup.string()\n        .required(\"Nie wpisano hasła.\") \n        .min(8, \"Hasło jest zbyt krótkie - powinno mieć conajmniej 8 znaków.\")\n}\n)\n\nexport const Login = ({loginSetter}) =>\n{\n    let history = useHistory()\n    const paperStyle = {\n        padding: 40,\n        height: \"40vh\",\n        width: 330,\n        margin: \"30px auto\",\n    }\n    const avatarStyle={backgroundColor:\"#1bbd7e\"}\n    const btnstyle={margin:\"8px 0\"}\n    return(\n        <div>\n        <Grid>\n                <Paper elevation={10} style={{ ...paperStyle, ...styles.glassMorphism }}>\n        <Grid align=\"center\">\n                \n                <Avatar style={avatarStyle}><LockOutlinedIcon/></Avatar>\n                     <h2>Zaloguj się</h2>\n                </Grid>\n\n                <Formik\n                    validationSchema={schema}\n                    initialValues={\n                        {\n                            email: \"\",\n                            password: \"\"\n                        }}\n                    onSubmit={async (data, { setSubmitting, resetForm }) =>\n                    {\n                        setSubmitting(true);\n                        data.password = hash(data.password)\n                        const [message, status] = await sender(API + \"auth/login\", data)\n                        console.log(message)\n                        if (status != 200)\n                        {\n                            alert(message)\n                            return\n                        }\n                        else \n                            jwtToCookie(message)\n\n                        const isLogged = isLoggedIn()\n                        loginSetter(isLogged)\n                        if (!isLogged)\n                            return\n\n                        history.push(\"/\")\n                        setTimeout(() =>\n                        {\n                            console.log(\"setting\")\n                            loginSetter(false)\n                        }, timeToExpire())\n                        \n                        console.log(timeToExpire())\n                        console.log(data);\n                        setSubmitting(false);\n                        resetForm();\n                    }}\n                >\n                {({\n                    values,\n                    isSubmitting,\n                    errors\n                }) => \n                (\n                    <Form>\n                        \n                        <Field \n                            name=\"email\" \n                            placeholder=\"janKowalski@poczta.com\" \n                            type=\"input\" \n                            label=\"email\" \n                            margin=\"normal\"\n                            as={MyTextField}\n                        />\n                        <Field \n                            name=\"password\" \n                            placeholder=\"***********\" \n                            type=\"password\"  \n                            label=\"hasło\" \n                            margin=\"normal\"\n                            as={MyTextField}\n                        />\n                        \n                        <Button style={btnstyle} disabled={isSubmitting} type=\"submit\">Zaloguj</Button>\n                    </Form>\n                )}\n                </Formik>\n                        \n            </Paper>\n        </Grid>\n        \n        </div>\n    )\n}","\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\nimport { Typography } from \"@material-ui/core\"\nimport { useState, useEffect } from \"react\"\nimport { fetcher, getToken } from \"../../utils/utils\"\nimport { Grid, Paper } from \"@material-ui/core\"\nimport { styles } from \"../styles\"\nimport { API } from \"../../App\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst paperStyle = {\n    padding: 20,\n    height: \"80vh\",\n    width: 330,\n    margin: \"10px auto\",\n}\n\nexport function UserInfo() {\n    const URL = \"/resources/patients/current\"\n    const [data, setData] = useState(null)\n    useEffect(() =>\n    {\n        fetcher(API + URL, setData, {\n            method: \"GET\",\n            headers: {\n                \"x-access-tokens\": getToken()\n            }\n        })\n    }, [])\n\n    console.log(data)\n    return (\n        <div>\n        <Grid>\n            { data && (\n                <div>\n                                \n                    <List className>\n            <Paper elevation={10} style={{ ...paperStyle, ...styles.glassMorphism }}>\n            <ListItem>\n                <ListItemText primary={data.fname} secondary=\"imię\" />\n            </ListItem>\n            <ListItem>\n                <ListItemText primary={data.lname} secondary=\"nazwisko\" />\n            </ListItem>\n            <ListItem>\n                <ListItemText primary={data.bdate} secondary=\"data urodzenia\" />\n            </ListItem>\n            <ListItem>\n                <ListItemText primary={data.email} secondary=\"email\" />\n            </ListItem>\n            <ListItem>\n                <ListItemText primary={data.phone} secondary=\"telefon\" />\n            </ListItem>\n            <ListItem>\n                <ListItemText primary={data.pesel} secondary=\"pesel\" />\n            </ListItem>\n            <ListItem>\n                <ListItemText primary={data.city} secondary=\"miasto\" />\n            </ListItem>\n            <ListItem>\n                <ListItemText primary={data.street} secondary=\"ulica\" />\n            </ListItem>\n            <ListItem>\n                <ListItemText primary={data.homeNumber} secondary=\"numer domu\" />\n            </ListItem>\n            <ListItem>\n                <ListItemText primary={data.zip} secondary=\"kod pocztowy\" />\n            </ListItem>\n                </Paper>\n            </List>\n                </div>\n            )}\n            </Grid>\n        </div>\n    )\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n        minWidth: 275,\n      maxWidth:500,\n  },\n  bullet: {\n    display: \"inline-block\",\n    // margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {props.data.clinic_name}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n            {props.data.name}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n            dzienny limit: {props.data.daily_limit} \n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n    miasto: {props.data.city}\n        </Typography>\n        <Typography>\n    kod-pocztowy: {props.data.zip}\n        </Typography>\n        <Typography>\n    ulica: {props.data.street}\n        </Typography>\n        <Typography>\n    numer budynku: {props.data.building_number}\n        </Typography>\n        <Typography>\n    telefon: {props.data.phone}\n        </Typography>\n        <Typography>\n    email: {props.data.email}\n        </Typography>\n        <Typography>\n    informacje kontaktowe: {props.data.contact_info}\n        </Typography>\n        <Typography>\n    informacje o placówce: {props.data.facility_info}\n        </Typography>\n        <Typography>\n    kraj: {props.data.country}\n        </Typography>\n      </CardContent>\n      <CardActions>\n              <Button size=\"small\" onClick={() => {\n                  props.idSetter(props.data.id)\n              }}>Wybierz</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n        minWidth: 275,\n      maxWidth:500,\n  },\n  bullet: {\n    display: \"inline-block\",\n    // margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function VaccinationCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          status: {props.data.status}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n            {props.data.name}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n    miasto: {props.data.city}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n            data: {props.data.date}\n        </Typography>\n        <Typography>\n    kod-pocztowy: {props.data.zip}\n        </Typography>\n        <Typography>\n    ulica: {props.data.street}\n        </Typography>\n        <Typography>\n    numer budynku: {props.data.building_number}\n        </Typography>\n        <Typography>\n    telefon: {props.data.phone}\n        </Typography>\n        <Typography>\n    email: {props.data.email}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\n\n\n","import React, { useEffect, useState } from \"react\"\nimport { sender, fetcher, getToken} from \"../../utils/utils\"\nimport {\n    Container,\n    CssBaseline,\n    Button, \n    TextField, \n    Grid, \n    Paper, \n    Typography, \n    makeStyles\n} from \"@material-ui/core\";\nimport { Formik, Field, Form, useField } from \"formik\"\nimport { styles } from \"../styles\"\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport hash from \"object-hash\"\nimport * as yup from \"yup\"\nimport { API } from \"../../App\"\nimport { MyTextField } from \"../Form\"\nimport SimpleCard from \"../FacilityCard\"\nimport VaccinationCard from \"../VaccinationCard\"\n\n\nconst schema = yup.object({\n    date: yup.date(\"Niepoprawny format daty\").required(\"Data urodzenia jest wymagana\"),\n})\n\n\nexport function FormVaccinate({loginSetter})\n{\n    const [data, setData] = useState([])\n    const [Id, setId] = useState(null)\n    const [vacc, setVacc] = useState(null)\n    const classes = makeStyles(styles.myMakeStyles);\n\n    const URL = \"resources/facilites/all\"\n    const [facilities, setFacilities] = useState(null)\n    useEffect(() =>\n    {\n        fetcher(API + URL, setFacilities, {\n            method: \"GET\"\n        })\n    }, [])\n\n    useEffect(async () =>\n    {\n        const response = await fetch(\n        API + \"vaccination/current\", \n        {\n            method: \"GET\",\n            headers:\n            {\n                \"Content-Type\": \"application/json\",\n                \"x-access-tokens\": getToken()\n            }\n        })\n\n        const json = await response.json()\n        if (response.status != 200)\n        {\n            setVacc(null)\n            return\n        }\n        setVacc(json)\n    }, [])\n\n    console.log(vacc)\n    console.log(\"vacc = ?\", vacc===null)\n    console.log(facilities)\n    return (\n        <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline> \n        <Grid>\n        {!!vacc && <VaccinationCard key={vacc.id}\n            data={vacc}\n            />\n        }\n         {!vacc && <Paper style={styles.glassMorphism}>\n\n        <div >\n            <LocalHospitalIcon className={classes.avatar}>\n                \n            </LocalHospitalIcon>\n        </div>\n        <Typography component=\"h1\" variant=\"h5\">\n            Zarejestruj się na szczepienie\n        </Typography>\n         <Formik\n            validationSchema={schema}\n            initialValues={\n                {\n                    date: \"\"\n                }}\n            onSubmit={async (data, { setSubmitting, resetForm }) =>\n            {\n                setSubmitting(true);\n                data = {...data, facility_id: Id}\n                console.log(data);\n                setSubmitting(false);\n                const response = await fetch(\n                    API + \"vaccination/register\", \n                    {\n                        method: \"POST\",\n                        headers:\n                        {\n                            \"Content-Type\": \"application/json\",\n                            \"x-access-tokens\": getToken()\n                        },\n                        body: JSON.stringify(data),\n                })\n            \n                const json = await response.json()\n                \n                if (response.status === 200)\n                    location.reload()\n                if (response.status === 401)\n                    alert(\"Użytkownik niezalogowany\")\n                if (response.status != 200)\n                    alert(\"Niepowodzenie\")\n                console.log(json)\n            }\n        }\n        >\n        {({\n            values,\n            isSubmitting,\n            errors,\n            touched\n        }) => \n        (\n            <Form>\n                \n                <Field \n                    name=\"date\" \n                    placeholder=\"2020-01-01\" \n                    type=\"input\" \n                    label=\"data\" \n                    as={MyTextField}\n                />\n                <Button disabled={isSubmitting} type=\"submit\">Prześlij zgłoszenie</Button>\n            </Form>\n        )}\n        </Formik>\n        Wybrano: { facilities && Id && facilities.find( ({ id }) => id === Id ).name}\n        </Paper>\n        }\n        {!vacc && facilities && facilities.map((item,key)=>{\n            return <SimpleCard key={item.id}\n            data={item}\n            idSetter={setId}\n            />\n        })}\n        \n        </Grid>\n           </CssBaseline>                \n        </Container>\n    </div>\n    );\n    }","import FormDziabadaj from \"./components/Form\"\nimport MyAppBar from \"./components/Navbar\"\nimport { Login }from \"./components/Login\"\nimport { UserInfo }from \"./components/UserInfo\"\nimport { FormVaccinate }from \"./components/Vaccinate\"\nimport {\n    makeStyles, Typography,\n} from \"@material-ui/core\"\nimport \"./App.css\"\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\"\nimport { useState } from \"react\"\nimport { sender, OfflineDatabase } from \"./utils/utils\"\n\nexport const API = \"/api/v1/\"\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    avatar: {\n      margin: theme.spacing(1),\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\nfunction App()\n{\n    const [IsLogged, setLogged] = useState(false)\n\n    addEventListener(\"load\", ()=>\n    {\n\n        function updateOnlineStatus(event) {\n            const isOnline = navigator.onLine\n            if (isOnline) {\n                const URL = API + \"resources/patients/create\"\n                const idb = new OfflineDatabase(\"offDB\", 1, \"formData\", \"email\")\n                idb.getAll(\"formData\").then(result => {\n                    result.forEach(element => {\n                        sender(URL, element)        \n                    })\n                }\n                )\n                idb.deleteAll(\"formData\").then(e => alert(\"Wysłano zachowane dane\"))\n            }\n        }\n\n      addEventListener(\"online\",  updateOnlineStatus);\n      addEventListener(\"offline\", updateOnlineStatus);\n    })\n      \n    return (\n      <BrowserRouter>\n\n        <div className=\"App\">\n            <MyAppBar />\n        <Switch >\n          <Route path=\"/login\">\n              <Login loginSetter={ setLogged }/>\n          </Route>\n          <Route path=\"/details\">\n              <UserInfo />\n          </Route>\n          <Route path=\"/vaccinations\">\n            <FormVaccinate></FormVaccinate>\n          </Route>\n          <Route exact path=\"/\">\n              {() => {\n                console.log({ IsLogged })\n                return IsLogged ? <UserInfo/> : <FormDziabadaj />\n              }\n              }\n          </Route>\n            </Switch>\n        </div>\n      </BrowserRouter>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}